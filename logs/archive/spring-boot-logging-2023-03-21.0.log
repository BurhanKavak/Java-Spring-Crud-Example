2023-03-21 12:01:13,459 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 26892 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 12:01:13,461 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 12:01:13,503 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 12:01:13,503 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 12:01:14,498 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 12:01:14,576 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 71 ms. Found 2 JPA repository interfaces.
2023-03-21 12:01:15,251 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 12:01:15,267 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 12:01:15,267 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 12:01:15,518 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 12:01:15,518 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2015 ms
2023-03-21 12:01:15,834 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 12:01:15,958 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 12:01:16,287 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 12:01:16,397 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 12:01:16,821 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 12:01:16,837 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 12:01:17,826 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 12:01:17,826 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 12:01:18,406 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 12:01:19,340 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 12:01:19,426 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 12:01:19,442 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 6.591 seconds (JVM running for 7.864)
2023-03-21 12:01:38,210 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 12:01:38,210 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 12:01:38,218 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 8 ms
2023-03-21 12:01:39,017 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-8] Init duration for springdoc-openapi is: 374 ms
2023-03-21 12:04:08,420 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-2] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.springbootcrud.model.Company> com.example.springbootcrud.controllers.CompanyController.createCompany(com.example.springbootcrud.dto.request.CompanyDtoForCreate): [Field error in object 'companyDtoForCreate' on field 'companyEmail': rejected value [string]; codes [Email.companyDtoForCreate.companyEmail,Email.companyEmail,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [companyDtoForCreate.companyEmail,companyEmail]; arguments []; default message [companyEmail],[Ljavax.validation.constraints.Pattern$Flag;@5e182356,.*]; default message [Geçerli şirket postası giriniz!!! ]] ]
2023-03-21 12:04:59,538 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.springbootcrud.model.Company> com.example.springbootcrud.controllers.CompanyController.createCompany(com.example.springbootcrud.dto.request.CompanyDtoForCreate): [Field error in object 'companyDtoForCreate' on field 'companyName': rejected value [s]; codes [Size.companyDtoForCreate.companyName,Size.companyName,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [companyDtoForCreate.companyName,companyName]; arguments []; default message [companyName],12,2]; default message [Şirket ismi 2 ile 12 karakter arasında olmalıdır!!!]] ]
2023-03-21 12:06:09,630 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-5] Company Kaydedildi
2023-03-21 12:07:02,431 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-6] Kullanıcı kaydedildi
2023-03-21 12:07:22,804 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-7] Resolved [com.example.springbootcrud.exception.UserNotFoundException: 15. Kullanıcı Bulunamadı!!!]
2023-03-21 12:10:09,938 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 12:10:09,938 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 12:10:09,970 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 17:23:22,594 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 6512 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 17:23:22,596 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 17:23:22,669 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 17:23:22,670 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 17:23:23,443 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 17:23:23,519 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 66 ms. Found 3 JPA repository interfaces.
2023-03-21 17:23:24,118 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 17:23:24,125 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 17:23:24,125 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 17:23:24,210 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 17:23:24,210 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1540 ms
2023-03-21 17:23:24,297 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 17:23:24,330 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 17:23:24,426 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 17:23:24,486 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 17:23:24,770 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 17:23:24,784 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 17:23:25,320 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users drop foreign key FKp56c1712k691lhsyewcssf40f" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users drop foreign key FKp56c1712k691lhsyewcssf40f" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:341)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:235)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKp56c1712k691lhsyewcssf40f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 38 common frames omitted
2023-03-21 17:23:25,694 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 17:23:25,706 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:23:26,428 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 17:23:27,536 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 17:23:27,603 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 17:23:27,614 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 5.56 seconds (JVM running for 7.469)
2023-03-21 17:23:35,214 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 17:23:35,215 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 17:23:35,217 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-03-21 17:23:35,857 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-4] Init duration for springdoc-openapi is: 313 ms
2023-03-21 17:31:02,643 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-6] Role Kaydedildi
2023-03-21 17:31:35,905 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.example.springbootcrud.exception.RoleNotFoundException: 12. Role Bulunamadı!!!] with root cause
com.example.springbootcrud.exception.RoleNotFoundException: 12. Role Bulunamadı!!!
	at com.example.springbootcrud.service.impl.RoleServiceImpl.lambda$getRole$0(RoleServiceImpl.java:36)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.example.springbootcrud.service.impl.RoleServiceImpl.getRole(RoleServiceImpl.java:36)
	at com.example.springbootcrud.controllers.RoleController.getRole(RoleController.java:31)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-03-21 17:34:39,785 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-3] Company Kaydedildi
2023-03-21 17:35:06,932 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-5] Kullanıcı kaydedildi
2023-03-21 17:36:08,089 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:36:08,089 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 17:36:08,109 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 17:36:30,689 INFO org.springframework.boot.StartupInfoLogger [main] Starting SpringBootCrudApplicationTests using Java 18.0.2 on 2563NBS with PID 18008 (started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 17:36:30,699 INFO org.springframework.boot.SpringApplication [main] The following 1 profile is active: "dev"
2023-03-21 17:36:31,584 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 17:36:31,679 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 86 ms. Found 3 JPA repository interfaces.
2023-03-21 17:36:32,278 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 17:36:32,359 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 17:36:32,508 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 17:36:32,719 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-03-21 17:36:33,169 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-03-21 17:36:33,214 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 17:36:34,309 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 17:36:34,318 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:36:35,269 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 17:36:37,594 INFO org.springframework.boot.StartupInfoLogger [main] Started SpringBootCrudApplicationTests in 7.312 seconds (JVM running for 8.39)
2023-03-21 17:36:37,978 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:36:37,983 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 17:36:37,998 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 17:37:43,213 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 5932 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 17:37:43,216 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 17:37:43,258 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 17:37:43,258 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 17:37:43,931 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 17:37:43,986 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 49 ms. Found 3 JPA repository interfaces.
2023-03-21 17:37:44,563 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 17:37:44,575 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 17:37:44,576 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 17:37:44,706 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 17:37:44,707 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1448 ms
2023-03-21 17:37:44,844 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 17:37:44,891 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 17:37:44,980 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 17:37:45,048 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 17:37:45,445 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 17:37:45,458 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 17:37:46,229 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 17:37:46,234 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:37:46,615 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 17:37:47,470 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 17:37:47,526 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 17:37:47,536 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 4.738 seconds (JVM running for 5.857)
2023-03-21 17:38:23,920 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 17:38:23,921 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 17:38:23,921 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 0 ms
2023-03-21 17:38:24,305 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-2] Init duration for springdoc-openapi is: 299 ms
2023-03-21 17:41:29,652 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-4] Role Kaydedildi
2023-03-21 17:41:35,989 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-5] Role Kaydedildi
2023-03-21 17:41:50,380 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-7] Role Kaydedildi
2023-03-21 17:41:54,367 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-8] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.springbootcrud.model.enums.RoleEnum` from String "ABC": not one of the values accepted for Enum class: [MODERATOR, CUSTOMER, ADMIN]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.springbootcrud.model.enums.RoleEnum` from String "ABC": not one of the values accepted for Enum class: [MODERATOR, CUSTOMER, ADMIN]<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 15] (through reference chain: com.example.springbootcrud.dto.request.RoleDtoForCreate["roleName"])]
2023-03-21 17:47:36,764 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-1] Company Kaydedildi
2023-03-21 17:47:51,877 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-3] Company Kaydedildi
2023-03-21 17:48:28,970 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-5] Kullanıcı kaydedildi
2023-03-21 17:51:19,272 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:51:19,338 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 17:51:19,387 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 17:51:29,487 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 7660 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 17:51:29,489 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 17:51:29,540 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 17:51:29,540 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 17:51:30,301 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 17:51:30,352 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 44 ms. Found 3 JPA repository interfaces.
2023-03-21 17:51:30,810 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 17:51:30,817 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 17:51:30,817 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 17:51:30,901 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 17:51:30,901 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1360 ms
2023-03-21 17:51:30,994 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 17:51:31,027 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 17:51:31,123 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 17:51:31,186 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 17:51:31,489 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 17:51:31,502 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 17:51:32,254 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 17:51:32,259 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 17:51:32,646 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 17:51:33,300 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 17:51:33,342 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 17:51:33,351 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 4.586 seconds (JVM running for 6.6)
2023-03-21 17:51:44,996 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 17:51:44,997 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 17:51:44,998 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-03-21 17:51:45,415 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-2] Init duration for springdoc-openapi is: 347 ms
2023-03-21 17:51:59,483 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-4] Role Kaydedildi
2023-03-21 17:52:21,800 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-6] Company Kaydedildi
2023-03-21 17:52:44,299 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-8] Kullanıcı kaydedildi
2023-03-21 17:53:06,347 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-10] Role Kaydedildi
2023-03-21 17:53:11,250 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.springbootcrud.model.enums.RoleEnum` from String "COMPANY": not one of the values accepted for Enum class: [MODERATOR, CUSTOMER, ADMIN]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.example.springbootcrud.model.enums.RoleEnum` from String "COMPANY": not one of the values accepted for Enum class: [MODERATOR, CUSTOMER, ADMIN]<EOL> at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 15] (through reference chain: com.example.springbootcrud.dto.request.RoleDtoForCreate["roleName"])]
2023-03-21 17:53:24,719 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-2] Role Kaydedildi
2023-03-21 17:53:45,782 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-4] Company Kaydedildi
2023-03-21 17:54:15,856 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-6] Kullanıcı kaydedildi
2023-03-21 17:54:38,132 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-8] Kullanıcı kaydedildi
2023-03-21 17:54:43,514 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-10] Tüm veriler getirildi
2023-03-21 17:55:38,993 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-4] Tüm veriler getirildi
2023-03-21 18:01:21,943 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:01:21,946 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 18:01:21,959 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 18:01:28,666 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 27348 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 18:01:28,669 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 18:01:28,738 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 18:01:28,738 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 18:01:29,537 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 18:01:29,582 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2023-03-21 18:01:29,984 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 18:01:29,990 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 18:01:29,990 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 18:01:30,072 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 18:01:30,072 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1333 ms
2023-03-21 18:01:30,157 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 18:01:30,192 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 18:01:30,300 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 18:01:30,397 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 18:01:30,699 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 18:01:30,716 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 18:01:31,196 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table companies_users drop foreign key FKspvg8j4percn4q5uhdis1is0n" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table companies_users drop foreign key FKspvg8j4percn4q5uhdis1is0n" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:341)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:235)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Table 'springdemocrud.companies_users' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 38 common frames omitted
2023-03-21 18:01:31,200 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table companies_users drop foreign key FKbvgbjy0rn2axjj2t4u5s8kbge" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table companies_users drop foreign key FKbvgbjy0rn2axjj2t4u5s8kbge" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:341)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:235)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Table 'springdemocrud.companies_users' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 38 common frames omitted
2023-03-21 18:01:31,204 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users drop foreign key FKin8gn4o1hpiwe6qe4ey7ykwq7" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users drop foreign key FKin8gn4o1hpiwe6qe4ey7ykwq7" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:341)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:235)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKin8gn4o1hpiwe6qe4ey7ykwq7'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 38 common frames omitted
2023-03-21 18:01:31,231 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists companies" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists companies" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:246)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLException: Cannot drop table 'companies' referenced by a foreign key constraint 'FKk16933s7t13css6h96y53yhjw' on table 'users'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:01:31,292 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "create table companies (company_id bigint not null auto_increment, company_email varchar(255), company_name varchar(255), description varchar(255), primary key (company_id)) engine=InnoDB" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table companies (company_id bigint not null auto_increment, company_email varchar(255), company_name varchar(255), description varchar(255), primary key (company_id)) engine=InnoDB" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:325)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Table 'companies' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:01:31,365 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table companies add constraint UK_ryckgbr0k2fswi0e58yhj5hqn unique (company_email)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table companies add constraint UK_ryckgbr0k2fswi0e58yhj5hqn unique (company_email)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:361)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_ryckgbr0k2fswi0e58yhj5hqn'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:01:31,712 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 18:01:31,722 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:01:32,473 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 18:01:33,203 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 18:01:33,250 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 18:01:33,259 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 5.008 seconds (JVM running for 6.042)
2023-03-21 18:02:23,435 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 18:02:23,436 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 18:02:23,437 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-03-21 18:02:23,843 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-2] Init duration for springdoc-openapi is: 334 ms
2023-03-21 18:02:31,774 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-4] Role Kaydedildi
2023-03-21 18:02:37,587 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-5] Role Kaydedildi
2023-03-21 18:02:42,361 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-7] Role Kaydedildi
2023-03-21 18:04:48,074 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:04:48,079 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 18:04:48,090 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 18:10:16,318 INFO org.springframework.boot.StartupInfoLogger [main] Starting SpringBootCrudApplicationTests using Java 18.0.2 on 2563NBS with PID 10828 (started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 18:10:16,322 INFO org.springframework.boot.SpringApplication [main] The following 1 profile is active: "dev"
2023-03-21 18:10:17,398 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 18:10:17,483 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 76 ms. Found 3 JPA repository interfaces.
2023-03-21 18:10:18,082 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 18:10:18,141 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 18:10:18,336 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 18:10:18,584 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-03-21 18:10:19,032 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-03-21 18:10:19,068 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 18:10:20,226 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 18:10:20,236 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:10:21,216 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 18:10:22,906 INFO org.springframework.boot.StartupInfoLogger [main] Started SpringBootCrudApplicationTests in 7.053 seconds (JVM running for 8.495)
2023-03-21 18:10:23,157 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:10:23,161 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 18:10:23,172 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 18:12:27,004 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 28176 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 18:12:27,008 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 18:12:27,077 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 18:12:27,078 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 18:12:27,910 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 18:12:27,988 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68 ms. Found 3 JPA repository interfaces.
2023-03-21 18:12:28,449 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 18:12:28,455 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 18:12:28,455 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 18:12:28,578 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 18:12:28,578 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1499 ms
2023-03-21 18:12:28,677 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 18:12:28,727 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 18:12:28,835 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 18:12:28,927 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 18:12:29,234 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 18:12:29,252 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 18:12:30,158 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 18:12:30,166 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:12:30,559 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 18:12:31,242 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 18:12:31,305 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 18:12:31,322 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 4.811 seconds (JVM running for 6.129)
2023-03-21 18:12:39,102 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 18:12:39,103 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 18:12:39,104 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-03-21 18:12:39,600 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-2] Init duration for springdoc-openapi is: 390 ms
2023-03-21 18:13:01,431 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-4] Role Kaydedildi
2023-03-21 18:13:05,442 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-5] Role Kaydedildi
2023-03-21 18:13:13,015 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-7] Role Kaydedildi
2023-03-21 18:13:50,726 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-9] Company Kaydedildi
2023-03-21 18:14:11,476 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-1] Company Kaydedildi
2023-03-21 18:15:32,661 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-4] Kullanıcı kaydedildi
2023-03-21 18:15:51,677 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-6] Kullanıcı kaydedildi
2023-03-21 18:16:22,121 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-8] Kullanıcı kaydedildi
2023-03-21 18:16:28,388 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-10] Tüm veriler getirildi
2023-03-21 18:22:31,153 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-8] Tüm veriler getirildi
2023-03-21 18:26:39,690 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:26:39,755 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 18:26:39,859 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 18:27:00,633 INFO org.springframework.boot.StartupInfoLogger [main] Starting SpringBootCrudApplicationTests using Java 18.0.2 on 2563NBS with PID 16760 (started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 18:27:00,635 INFO org.springframework.boot.SpringApplication [main] The following 1 profile is active: "dev"
2023-03-21 18:27:01,767 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 18:27:01,874 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 98 ms. Found 3 JPA repository interfaces.
2023-03-21 18:27:02,492 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 18:27:02,557 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 18:27:02,718 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 18:27:02,947 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-03-21 18:27:03,492 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-03-21 18:27:03,534 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 18:27:04,420 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists companies" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists companies" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:246)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLException: Cannot drop table 'companies' referenced by a foreign key constraint 'FKbvgbjy0rn2axjj2t4u5s8kbge' on table 'companies_users'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,451 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists users" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists users" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:246)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLException: Cannot drop table 'users' referenced by a foreign key constraint 'FKspvg8j4percn4q5uhdis1is0n' on table 'companies_users'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,462 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "create table companies (company_id bigint not null auto_increment, company_email varchar(255), company_name varchar(255), description varchar(255), primary key (company_id)) engine=InnoDB" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table companies (company_id bigint not null auto_increment, company_email varchar(255), company_name varchar(255), description varchar(255), primary key (company_id)) engine=InnoDB" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:325)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLSyntaxErrorException: Table 'companies' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,486 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "create table users (user_id bigint not null auto_increment, birthday datetime(6), email varchar(255), first_name varchar(255), last_name varchar(255), company_id bigint not null, role_id bigint not null, primary key (user_id)) engine=InnoDB" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table users (user_id bigint not null auto_increment, birthday datetime(6), email varchar(255), first_name varchar(255), last_name varchar(255), company_id bigint not null, role_id bigint not null, primary key (user_id)) engine=InnoDB" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:325)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLSyntaxErrorException: Table 'users' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,492 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "alter table companies add constraint UK_ryckgbr0k2fswi0e58yhj5hqn unique (company_email)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table companies add constraint UK_ryckgbr0k2fswi0e58yhj5hqn unique (company_email)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:361)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_ryckgbr0k2fswi0e58yhj5hqn'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,496 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:361)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_6dotkott2kjsp8vw4d0m25fb7'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,587 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [main] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users add constraint FKp56c1712k691lhsyewcssf40f foreign key (role_id) references roles (roles_id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users add constraint FKp56c1712k691lhsyewcssf40f foreign key (role_id) references roles (roles_id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:389)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`springdemocrud`.`#sql-1ae0_7c1`, CONSTRAINT `FKp56c1712k691lhsyewcssf40f` FOREIGN KEY (`role_id`) REFERENCES `roles` (`roles_id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 100 common frames omitted
2023-03-21 18:27:04,589 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 18:27:04,599 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:27:06,092 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 18:27:07,965 INFO org.springframework.boot.StartupInfoLogger [main] Started SpringBootCrudApplicationTests in 7.815 seconds (JVM running for 8.88)
2023-03-21 18:27:08,240 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:27:08,245 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 18:27:08,269 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-03-21 18:27:21,472 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting SpringBootCrudApplication using Java 18.0.2 on 2563NBS with PID 6376 (D:\DetaysoftJavaProject\springBootCrud\target\classes started by burha in D:\DetaysoftJavaProject\springBootCrud)
2023-03-21 18:27:21,473 INFO org.springframework.boot.SpringApplication [restartedMain] The following 1 profile is active: "dev"
2023-03-21 18:27:21,511 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-03-21 18:27:21,512 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-03-21 18:27:22,246 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-21 18:27:22,295 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 43 ms. Found 3 JPA repository interfaces.
2023-03-21 18:27:22,709 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2023-03-21 18:27:22,715 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2023-03-21 18:27:22,716 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-03-21 18:27:22,820 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2023-03-21 18:27:22,820 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1308 ms
2023-03-21 18:27:22,906 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-21 18:27:22,933 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 5.6.10.Final
2023-03-21 18:27:23,016 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-21 18:27:23,066 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-03-21 18:27:23,271 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-03-21 18:27:23,281 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-03-21 18:27:23,788 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users drop foreign key FKp56c1712k691lhsyewcssf40f" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users drop foreign key FKp56c1712k691lhsyewcssf40f" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:341)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:235)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKp56c1712k691lhsyewcssf40f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 38 common frames omitted
2023-03-21 18:27:23,791 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists companies" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists companies" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:246)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLException: Cannot drop table 'companies' referenced by a foreign key constraint 'FKbvgbjy0rn2axjj2t4u5s8kbge' on table 'companies_users'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,807 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists users" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists users" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:387)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:371)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:246)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:156)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:128)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:157)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLException: Cannot drop table 'users' referenced by a foreign key constraint 'FKspvg8j4percn4q5uhdis1is0n' on table 'companies_users'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,812 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "create table companies (company_id bigint not null auto_increment, company_email varchar(255), company_name varchar(255), description varchar(255), primary key (company_id)) engine=InnoDB" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table companies (company_id bigint not null auto_increment, company_email varchar(255), company_name varchar(255), description varchar(255), primary key (company_id)) engine=InnoDB" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:325)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Table 'companies' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,832 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "create table users (user_id bigint not null auto_increment, birthday datetime(6), email varchar(255), first_name varchar(255), last_name varchar(255), company_id bigint not null, role_id bigint not null, primary key (user_id)) engine=InnoDB" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table users (user_id bigint not null auto_increment, birthday datetime(6), email varchar(255), first_name varchar(255), last_name varchar(255), company_id bigint not null, role_id bigint not null, primary key (user_id)) engine=InnoDB" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:325)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Table 'users' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,834 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table companies add constraint UK_ryckgbr0k2fswi0e58yhj5hqn unique (company_email)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table companies add constraint UK_ryckgbr0k2fswi0e58yhj5hqn unique (company_email)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:361)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_ryckgbr0k2fswi0e58yhj5hqn'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,837 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:361)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_6dotkott2kjsp8vw4d0m25fb7'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,920 WARN org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl [restartedMain] GenerationTarget encountered exception accepting command : Error executing DDL "alter table users add constraint FKp56c1712k691lhsyewcssf40f foreign key (role_id) references roles (roles_id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table users add constraint FKp56c1712k691lhsyewcssf40f foreign key (role_id) references roles (roles_id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:458)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:442)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:389)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:169)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:138)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:124)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:168)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.example.springbootcrud.SpringBootCrudApplication.main(SpringBootCrudApplication.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`springdemocrud`.`#sql-1ae0_7cb`, CONSTRAINT `FKp56c1712k691lhsyewcssf40f` FOREIGN KEY (`role_id`) REFERENCES `roles` (`roles_id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 37 common frames omitted
2023-03-21 18:27:23,921 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-21 18:27:23,927 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:27:24,402 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-21 18:27:25,111 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-03-21 18:27:25,170 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2023-03-21 18:27:25,181 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started SpringBootCrudApplication in 4.166 seconds (JVM running for 5.076)
2023-03-21 18:27:42,030 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-21 18:27:42,030 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-03-21 18:27:42,031 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-03-21 18:27:42,489 INFO org.springdoc.api.AbstractOpenApiResource [http-nio-8080-exec-2] Init duration for springdoc-openapi is: 387 ms
2023-03-21 18:27:51,585 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-3] Role Kaydedildi
2023-03-21 18:27:55,433 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-4] Role Kaydedildi
2023-03-21 18:27:59,588 INFO com.example.springbootcrud.service.impl.RoleServiceImpl [http-nio-8080-exec-5] Role Kaydedildi
2023-03-21 18:28:17,674 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-7] Company Kaydedildi
2023-03-21 18:28:27,779 INFO com.example.springbootcrud.service.impl.CompanyServiceImpl [http-nio-8080-exec-9] Company Kaydedildi
2023-03-21 18:28:58,575 INFO com.example.springbootcrud.service.impl.UserServiceImpl [http-nio-8080-exec-1] Kullanıcı kaydedildi
2023-03-21 18:29:49,549 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"])]
2023-03-21 18:30:41,414 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-8] Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.springbootcrud.model.User["company"]->com.example.springbootcrud.model.Company["users"])]
2023-03-21 18:31:27,661 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-21 18:31:27,665 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-03-21 18:31:27,677 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
